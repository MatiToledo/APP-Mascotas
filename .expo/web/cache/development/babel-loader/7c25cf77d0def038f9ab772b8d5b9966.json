{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport MyButton from \"../ui/Button\";\nimport { React, useEffect, useState } from \"react\";\nimport ImageSelector from \"./ImageSelector\";\nimport Maps from \"./Maps\";\nimport { useSelector } from \"react-redux\";\nimport { createPetReport } from \"../lib/api\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ReportPetComp(props) {\n  var auth = useSelector(function (state) {\n    return state.auth;\n  });\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      petName = _useState2[0],\n      setPetName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      petDescription = _useState4[0],\n      setPetDescription = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      petPhoto = _useState6[0],\n      setPetPhoto = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      geoData = _useState8[0],\n      setGeoData = _useState8[1];\n\n  var petOwnerEmail = auth.email;\n  var token = auth.token;\n\n  function handlePetName(t) {\n    setPetName(t);\n  }\n\n  function handlePetDescription(t) {\n    setPetDescription(t);\n  }\n\n  function handleImage(image) {\n    setPetPhoto(image);\n  }\n\n  function handleGeoData(data) {\n    setGeoData(data);\n  }\n\n  function handleReport() {\n    var data, report;\n    return _regeneratorRuntime.async(function handleReport$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            data = {\n              petName: petName,\n              petDescription: petDescription,\n              petOwnerEmail: petOwnerEmail,\n              petUbication: geoData ? geoData.petUbication : null,\n              lastlocationLat: geoData ? geoData.lastlocationLat : null,\n              lastlocationLng: geoData ? geoData.lastlocationLng : null,\n              petPhoto: \"https://www.sam-manipulados.com/wp-content/uploads/2014/01/default_image_01.png\"\n            };\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(createPetReport(data, token));\n\n          case 3:\n            report = _context.sent;\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Reportar Mascota\"\n    }), _jsxs(ScrollView, {\n      children: [_jsxs(View, {\n        style: styles.form,\n        children: [_jsxs(View, {\n          style: styles.input,\n          children: [_jsx(Text, {\n            style: styles.label,\n            children: \"Nombre\"\n          }), _jsx(TextInput, {\n            style: styles.textInput,\n            placeholder: \"  Introduzca el nombre de la mascota\",\n            value: petName,\n            onChangeText: handlePetName\n          })]\n        }), _jsxs(View, {\n          style: styles.input,\n          children: [_jsx(Text, {\n            style: styles.label,\n            children: \"Descripci\\xF3n\"\n          }), _jsx(TextInput, {\n            multiline: true,\n            numberOfLines: 4,\n            style: styles.textInput,\n            placeholder: \"  Introduzca una de la mascota\",\n            value: petDescription,\n            onChangeText: handlePetDescription\n          })]\n        })]\n      }), _jsx(ImageSelector, {\n        handleImage: handleImage\n      }), _jsx(Maps, {\n        handleGeoData: handleGeoData\n      }), _jsx(MyButton, {\n        title: \"Reportar Mascota\",\n        onPress: handleReport\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    margin: 20,\n    alignItems: \"center\"\n  },\n  title: {\n    fontFamily: \"InterRegular\",\n    fontWeight: \"700\",\n    fontSize: 27,\n    textAlign: \"center\",\n    margin: 12,\n    marginBottom: 20\n  },\n  form: {\n    marginTop: 20,\n    marginBottom: 15,\n    width: 300,\n    textAlign: \"left\",\n    alignItems: \"flex-start\",\n    justifyContent: \"center\"\n  },\n  input: {\n    width: \"100%\",\n    marginBottom: 15\n  },\n  label: {\n    fontFamily: \"InterRegular\",\n    fontWeight: \"400\",\n    fontSize: 16\n  },\n  textInput: {\n    borderColor: \"gray\",\n    borderWidth: 1,\n    borderRadius: 7,\n    width: \"100%\",\n    padding: 2\n  }\n});","map":{"version":3,"sources":["/Users/mati/CoderHouse/APP/1-intro/5-proyect/components/PetReport.js"],"names":["MyButton","React","useEffect","useState","ImageSelector","Maps","useSelector","createPetReport","ReportPetComp","props","auth","state","petName","setPetName","petDescription","setPetDescription","petPhoto","setPetPhoto","geoData","setGeoData","petOwnerEmail","email","token","handlePetName","t","handlePetDescription","handleImage","image","handleGeoData","data","handleReport","petUbication","lastlocationLat","lastlocationLng","report","styles","container","title","form","input","label","textInput","StyleSheet","create","flex","margin","alignItems","fontFamily","fontWeight","fontSize","textAlign","marginBottom","marginTop","width","justifyContent","borderColor","borderWidth","borderRadius","padding"],"mappings":";;;;;;;AACA,OAAOA,QAAP;AACA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,aAAP;AACA,OAAOC,IAAP;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,eAAT;;;AAEA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC3C,MAAMC,IAAI,GAAGJ,WAAW,CAAC,UAACK,KAAD;AAAA,WAAWA,KAAK,CAACD,IAAjB;AAAA,GAAD,CAAxB;;AACA,kBAA8BP,QAAQ,CAAC,EAAD,CAAtC;AAAA;AAAA,MAAOS,OAAP;AAAA,MAAgBC,UAAhB;;AACA,mBAA4CV,QAAQ,CAAC,EAAD,CAApD;AAAA;AAAA,MAAOW,cAAP;AAAA,MAAuBC,iBAAvB;;AACA,mBAAgCZ,QAAQ,CAAC,IAAD,CAAxC;AAAA;AAAA,MAAOa,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAA8Bd,QAAQ,CAAC,IAAD,CAAtC;AAAA;AAAA,MAAOe,OAAP;AAAA,MAAgBC,UAAhB;;AACA,MAAMC,aAAa,GAAGV,IAAI,CAACW,KAA3B;AACA,MAAMC,KAAK,GAAGZ,IAAI,CAACY,KAAnB;;AAEA,WAASC,aAAT,CAAuBC,CAAvB,EAA0B;AACxBX,IAAAA,UAAU,CAACW,CAAD,CAAV;AACD;;AACD,WAASC,oBAAT,CAA8BD,CAA9B,EAAiC;AAC/BT,IAAAA,iBAAiB,CAACS,CAAD,CAAjB;AACD;;AACD,WAASE,WAAT,CAAqBC,KAArB,EAA4B;AAC1BV,IAAAA,WAAW,CAACU,KAAD,CAAX;AACD;;AACD,WAASC,aAAT,CAAuBC,IAAvB,EAA6B;AAC3BV,IAAAA,UAAU,CAACU,IAAD,CAAV;AACD;;AACD,WAAeC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACQD,YAAAA,IADR,GACe;AACXjB,cAAAA,OAAO,EAAPA,OADW;AAEXE,cAAAA,cAAc,EAAdA,cAFW;AAGXM,cAAAA,aAAa,EAAbA,aAHW;AAIXW,cAAAA,YAAY,EAAEb,OAAO,GAAGA,OAAO,CAACa,YAAX,GAA0B,IAJpC;AAKXC,cAAAA,eAAe,EAAEd,OAAO,GAAGA,OAAO,CAACc,eAAX,GAA6B,IAL1C;AAMXC,cAAAA,eAAe,EAAEf,OAAO,GAAGA,OAAO,CAACe,eAAX,GAA6B,IAN1C;AAOXjB,cAAAA,QAAQ,EACN;AARS,aADf;AAAA;AAAA,6CAWuBT,eAAe,CAACsB,IAAD,EAAOP,KAAP,CAXtC;;AAAA;AAWQY,YAAAA,MAXR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAcA,SACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA,eACE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAED,MAAM,CAACE,KAApB;AAAA;AAAA,MADF,EAEE,MAAC,UAAD;AAAA,iBACE,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,MAAM,CAACG,IAApB;AAAA,mBACE,MAAC,IAAD;AAAM,UAAA,KAAK,EAAEH,MAAM,CAACI,KAApB;AAAA,qBACE,KAAC,IAAD;AAAM,YAAA,KAAK,EAAEJ,MAAM,CAACK,KAApB;AAAA;AAAA,YADF,EAEE,KAAC,SAAD;AACE,YAAA,KAAK,EAAEL,MAAM,CAACM,SADhB;AAEE,YAAA,WAAW,EAAC,sCAFd;AAGE,YAAA,KAAK,EAAE7B,OAHT;AAIE,YAAA,YAAY,EAAEW;AAJhB,YAFF;AAAA,UADF,EAUE,MAAC,IAAD;AAAM,UAAA,KAAK,EAAEY,MAAM,CAACI,KAApB;AAAA,qBACE,KAAC,IAAD;AAAM,YAAA,KAAK,EAAEJ,MAAM,CAACK,KAApB;AAAA;AAAA,YADF,EAEE,KAAC,SAAD;AACE,YAAA,SAAS,EAAE,IADb;AAEE,YAAA,aAAa,EAAE,CAFjB;AAGE,YAAA,KAAK,EAAEL,MAAM,CAACM,SAHhB;AAIE,YAAA,WAAW,EAAC,gCAJd;AAKE,YAAA,KAAK,EAAE3B,cALT;AAME,YAAA,YAAY,EAAEW;AANhB,YAFF;AAAA,UAVF;AAAA,QADF,EAuBE,KAAC,aAAD;AAAe,QAAA,WAAW,EAAEC;AAA5B,QAvBF,EAwBE,KAAC,IAAD;AAAM,QAAA,aAAa,EAAEE;AAArB,QAxBF,EAyBE,KAAC,QAAD;AAAU,QAAA,KAAK,EAAC,kBAAhB;AAAmC,QAAA,OAAO,EAAEE;AAA5C,QAzBF;AAAA,MAFF;AAAA,IADF;AAgCD;AAED,IAAMK,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BP,EAAAA,SAAS,EAAE;AACTQ,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,MAAM,EAAE,EAFC;AAGTC,IAAAA,UAAU,EAAE;AAHH,GADoB;AAM/BT,EAAAA,KAAK,EAAE;AACLU,IAAAA,UAAU,EAAE,cADP;AAELC,IAAAA,UAAU,EAAE,KAFP;AAGLC,IAAAA,QAAQ,EAAE,EAHL;AAILC,IAAAA,SAAS,EAAE,QAJN;AAKLL,IAAAA,MAAM,EAAE,EALH;AAMLM,IAAAA,YAAY,EAAE;AANT,GANwB;AAc/Bb,EAAAA,IAAI,EAAE;AACJc,IAAAA,SAAS,EAAE,EADP;AAEJD,IAAAA,YAAY,EAAE,EAFV;AAGJE,IAAAA,KAAK,EAAE,GAHH;AAIJH,IAAAA,SAAS,EAAE,MAJP;AAKJJ,IAAAA,UAAU,EAAE,YALR;AAMJQ,IAAAA,cAAc,EAAE;AANZ,GAdyB;AAsB/Bf,EAAAA,KAAK,EAAE;AACLc,IAAAA,KAAK,EAAE,MADF;AAELF,IAAAA,YAAY,EAAE;AAFT,GAtBwB;AA0B/BX,EAAAA,KAAK,EAAE;AACLO,IAAAA,UAAU,EAAE,cADP;AAELC,IAAAA,UAAU,EAAE,KAFP;AAGLC,IAAAA,QAAQ,EAAE;AAHL,GA1BwB;AA+B/BR,EAAAA,SAAS,EAAE;AACTc,IAAAA,WAAW,EAAE,MADJ;AAETC,IAAAA,WAAW,EAAE,CAFJ;AAGTC,IAAAA,YAAY,EAAE,CAHL;AAITJ,IAAAA,KAAK,EAAE,MAJE;AAKTK,IAAAA,OAAO,EAAE;AALA;AA/BoB,CAAlB,CAAf","sourcesContent":["import { StyleSheet, Text, View, ScrollView, TextInput } from \"react-native\";\nimport MyButton from \"../ui/Button\";\nimport { React, useEffect, useState } from \"react\";\nimport ImageSelector from \"./ImageSelector\";\nimport Maps from \"./Maps\";\nimport { useSelector } from \"react-redux\";\nimport { createPetReport } from \"../lib/api\";\n\nexport default function ReportPetComp(props) {\n  const auth = useSelector((state) => state.auth);\n  const [petName, setPetName] = useState(\"\");\n  const [petDescription, setPetDescription] = useState(\"\");\n  const [petPhoto, setPetPhoto] = useState(null);\n  const [geoData, setGeoData] = useState(null);\n  const petOwnerEmail = auth.email;\n  const token = auth.token;\n\n  function handlePetName(t) {\n    setPetName(t);\n  }\n  function handlePetDescription(t) {\n    setPetDescription(t);\n  }\n  function handleImage(image) {\n    setPetPhoto(image);\n  }\n  function handleGeoData(data) {\n    setGeoData(data);\n  }\n  async function handleReport() {\n    const data = {\n      petName,\n      petDescription,\n      petOwnerEmail,\n      petUbication: geoData ? geoData.petUbication : null,\n      lastlocationLat: geoData ? geoData.lastlocationLat : null,\n      lastlocationLng: geoData ? geoData.lastlocationLng : null,\n      petPhoto:\n        \"https://www.sam-manipulados.com/wp-content/uploads/2014/01/default_image_01.png\",\n    };\n    const report = await createPetReport(data, token);\n  }\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Reportar Mascota</Text>\n      <ScrollView>\n        <View style={styles.form}>\n          <View style={styles.input}>\n            <Text style={styles.label}>Nombre</Text>\n            <TextInput\n              style={styles.textInput}\n              placeholder=\"  Introduzca el nombre de la mascota\"\n              value={petName}\n              onChangeText={handlePetName}\n            ></TextInput>\n          </View>\n          <View style={styles.input}>\n            <Text style={styles.label}>Descripción</Text>\n            <TextInput\n              multiline={true}\n              numberOfLines={4}\n              style={styles.textInput}\n              placeholder=\"  Introduzca una de la mascota\"\n              value={petDescription}\n              onChangeText={handlePetDescription}\n            ></TextInput>\n          </View>\n        </View>\n        <ImageSelector handleImage={handleImage}></ImageSelector>\n        <Maps handleGeoData={handleGeoData}></Maps>\n        <MyButton title=\"Reportar Mascota\" onPress={handleReport}></MyButton>\n      </ScrollView>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    margin: 20,\n    alignItems: \"center\",\n  },\n  title: {\n    fontFamily: \"InterRegular\",\n    fontWeight: \"700\",\n    fontSize: 27,\n    textAlign: \"center\",\n    margin: 12,\n    marginBottom: 20,\n  },\n  form: {\n    marginTop: 20,\n    marginBottom: 15,\n    width: 300,\n    textAlign: \"left\",\n    alignItems: \"flex-start\",\n    justifyContent: \"center\",\n  },\n  input: {\n    width: \"100%\",\n    marginBottom: 15,\n  },\n  label: {\n    fontFamily: \"InterRegular\",\n    fontWeight: \"400\",\n    fontSize: 16,\n  },\n  textInput: {\n    borderColor: \"gray\",\n    borderWidth: 1,\n    borderRadius: 7,\n    width: \"100%\",\n    padding: 2,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}