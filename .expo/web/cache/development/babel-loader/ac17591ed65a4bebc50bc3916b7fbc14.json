{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { deleteUserLocation, fetchUserLocation, insertUserLocation } from \"../../db\";\nimport { myPets } from \"../../lib/api\";\nexport var ADD_UBICATION = \"ADD_UBICATION\";\nexport var REMOVE_UBICATION = \"REMOVE_UBICATION\";\nexport var LOAD_UBICATION = \"LOAD_UBICATION\";\nexport var USER_PETS = \"USER_PETS\";\nexport var addUbication = function addUbication(data) {\n  var lat = data.lat,\n      lng = data.lng;\n  return function _callee(dispatch) {\n    var result;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(insertUserLocation(lat, lng));\n\n          case 3:\n            result = _context.sent;\n            dispatch({\n              type: ADD_UBICATION,\n              coords: data\n            });\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            throw _context.t0;\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n};\nexport var removeUbication = function removeUbication() {\n  return function _callee2(dispatch) {\n    var result;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(deleteUserLocation());\n\n          case 3:\n            result = _context2.sent;\n            dispatch({\n              type: REMOVE_UBICATION\n            });\n            _context2.next = 10;\n            break;\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n            throw _context2.t0;\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n};\nexport var loadUbication = function loadUbication() {\n  return function _callee3(dispatch) {\n    var result;\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(fetchUserLocation());\n\n          case 3:\n            result = _context3.sent;\n            _context3.next = 9;\n            break;\n\n          case 6:\n            _context3.prev = 6;\n            _context3.t0 = _context3[\"catch\"](0);\n            throw _context3.t0;\n\n          case 9:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n};\nexport var userPets = function userPets(token) {\n  return function _callee4(dispatch) {\n    var pets;\n    return _regeneratorRuntime.async(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            _context4.next = 3;\n            return _regeneratorRuntime.awrap(myPets(token));\n\n          case 3:\n            pets = _context4.sent;\n            dispatch({\n              type: USER_PETS,\n              data: pets\n            });\n            _context4.next = 10;\n            break;\n\n          case 7:\n            _context4.prev = 7;\n            _context4.t0 = _context4[\"catch\"](0);\n            throw _context4.t0;\n\n          case 10:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n};","map":{"version":3,"sources":["/Users/mati/CoderHouse/APP/1-intro/5-proyect/store/actions/user.action.js"],"names":["deleteUserLocation","fetchUserLocation","insertUserLocation","myPets","ADD_UBICATION","REMOVE_UBICATION","LOAD_UBICATION","USER_PETS","addUbication","data","lat","lng","dispatch","result","type","coords","removeUbication","loadUbication","userPets","token","pets"],"mappings":";AAAA,SACEA,kBADF,EAEEC,iBAFF,EAGEC,kBAHF;AAKA,SAASC,MAAT;AAEA,OAAO,IAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,IAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,IAAMC,SAAS,GAAG,WAAlB;AAEP,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAU;AACpC,MAAQC,GAAR,GAAqBD,IAArB,CAAQC,GAAR;AAAA,MAAaC,GAAb,GAAqBF,IAArB,CAAaE,GAAb;AACA,SAAO,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEkBV,kBAAkB,CAACQ,GAAD,EAAMC,GAAN,CAFpC;;AAAA;AAEGE,YAAAA,MAFH;AAGHD,YAAAA,QAAQ,CAAC;AAAEE,cAAAA,IAAI,EAAEV,aAAR;AAAuBW,cAAAA,MAAM,EAAEN;AAA/B,aAAD,CAAR;AAHG;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAQD,CAVM;AAYP,OAAO,IAAMO,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AACnC,SAAO,kBAAOJ,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEkBZ,kBAAkB,EAFpC;;AAAA;AAEGa,YAAAA,MAFH;AAGHD,YAAAA,QAAQ,CAAC;AAAEE,cAAAA,IAAI,EAAET;AAAR,aAAD,CAAR;AAHG;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAQD,CATM;AAWP,OAAO,IAAMY,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACjC,SAAO,kBAAOL,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEkBX,iBAAiB,EAFnC;;AAAA;AAEGY,YAAAA,MAFH;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAQD,CATM;AAUP,OAAO,IAAMK,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AACjC,SAAO,kBAAOP,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEgBT,MAAM,CAACgB,KAAD,CAFtB;;AAAA;AAEGC,YAAAA,IAFH;AAGHR,YAAAA,QAAQ,CAAC;AAAEE,cAAAA,IAAI,EAAEP,SAAR;AAAmBE,cAAAA,IAAI,EAAEW;AAAzB,aAAD,CAAR;AAHG;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAQD,CATM","sourcesContent":["import {\n  deleteUserLocation,\n  fetchUserLocation,\n  insertUserLocation,\n} from \"../../db\";\nimport { myPets } from \"../../lib/api\";\n\nexport const ADD_UBICATION = \"ADD_UBICATION\";\nexport const REMOVE_UBICATION = \"REMOVE_UBICATION\";\nexport const LOAD_UBICATION = \"LOAD_UBICATION\";\nexport const USER_PETS = \"USER_PETS\";\n\nexport const addUbication = (data) => {\n  const { lat, lng } = data;\n  return async (dispatch) => {\n    try {\n      const result = await insertUserLocation(lat, lng);\n      dispatch({ type: ADD_UBICATION, coords: data });\n    } catch (error) {\n      throw error;\n    }\n  };\n};\n\nexport const removeUbication = () => {\n  return async (dispatch) => {\n    try {\n      const result = await deleteUserLocation();\n      dispatch({ type: REMOVE_UBICATION });\n    } catch (error) {\n      throw error;\n    }\n  };\n};\n\nexport const loadUbication = () => {\n  return async (dispatch) => {\n    try {\n      const result = await fetchUserLocation();\n      // dispatch({ type: LOAD_UBICATION, coords: data });\n    } catch (error) {\n      throw error;\n    }\n  };\n};\nexport const userPets = (token) => {\n  return async (dispatch) => {\n    try {\n      const pets = await myPets(token);\n      dispatch({ type: USER_PETS, data: pets });\n    } catch (error) {\n      throw error;\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}