{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { React, useState } from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { checkEmail, authToken } from \"../lib/api\";\nimport { useDispatch } from \"react-redux\";\nimport MyButton from \"../ui/Button\";\nimport { authAction } from \"../store/actions/auth.action\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function LogIn(props) {\n  var dispatch = useDispatch();\n  var navigation = props.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  function handleOnPress() {\n    var exist, auth;\n    return _regeneratorRuntime.async(function handleOnPress$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(checkEmail(email));\n\n          case 2:\n            exist = _context.sent;\n\n            if (!exist) {\n              _context.next = 10;\n              break;\n            }\n\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(authToken({\n              email: email,\n              password: password\n            }));\n\n          case 6:\n            auth = _context.sent;\n\n            if (auth.token) {\n              dispatch(authAction(auth.user.userName, auth.token, auth.user.email));\n              navigation.navigate(\"Home\");\n              Alert.alert(\"Inicio de sesion realizado con exito\");\n            } else {\n              setPassword(\"\");\n              Alert.alert(\"Contrase√±a o email incorrecto\");\n            }\n\n            _context.next = 11;\n            break;\n\n          case 10:\n            Alert.alert(\"No existe un usuario con ese email\");\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function handleEmail(t) {\n    setEmail(t);\n  }\n\n  function handlePassword(t) {\n    setPassword(t);\n  }\n\n  function handleLogUp() {\n    navigation.navigate(\"Log Up\");\n  }\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Ingresar\"\n    }), _jsxs(View, {\n      style: styles.form,\n      children: [_jsxs(View, {\n        style: styles.input,\n        children: [_jsx(Text, {\n          style: styles.label,\n          children: \"Email\"\n        }), _jsx(TextInput, {\n          style: styles.textInput,\n          placeholder: \"  Introduzca su email\",\n          value: email,\n          onChangeText: handleEmail\n        })]\n      }), _jsxs(View, {\n        style: styles.input,\n        children: [_jsx(Text, {\n          style: styles.label,\n          children: \"Contrase\\xF1a\"\n        }), _jsx(TextInput, {\n          style: styles.textInput,\n          placeholder: \"  Introduzca su contrase\\xF1a\",\n          value: password,\n          secureTextEntry: true,\n          onChangeText: handlePassword\n        })]\n      }), _jsx(MyButton, {\n        onPress: handleOnPress,\n        title: \"Ingresar\"\n      })]\n    }), _jsx(Text, {\n      style: styles.link,\n      onPress: handleLogUp,\n      children: \"Registrarse\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    height: Dimensions.get(\"window\").height,\n    width: Dimensions.get(\"window\").width,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    position: \"absolute\"\n  },\n  title: {\n    fontFamily: \"InterRegular\",\n    fontWeight: \"700\",\n    fontSize: 27,\n    textAlign: \"center\"\n  },\n  form: {\n    marginTop: 20,\n    marginBottom: 15,\n    width: 300,\n    textAlign: \"left\",\n    alignItems: \"flex-start\",\n    justifyContent: \"center\"\n  },\n  input: {\n    width: \"100%\",\n    marginBottom: 15\n  },\n  label: {\n    fontFamily: \"InterRegular\",\n    fontWeight: \"400\",\n    fontSize: 16\n  },\n  textInput: {\n    borderColor: \"gray\",\n    borderWidth: 1,\n    borderRadius: 7,\n    width: \"100%\",\n    padding: 2\n  },\n  link: {\n    fontFamily: \"InterRegular\",\n    fontWeight: \"400\",\n    fontSize: 16,\n    color: \"#485fc7\",\n    textAlign: \"center\",\n    textDecorationLine: \"underline\"\n  }\n});","map":{"version":3,"sources":["/Users/mati/CoderHouse/APP/1-intro/5-proyect/components/LogIn.js"],"names":["React","useState","checkEmail","authToken","useDispatch","MyButton","authAction","LogIn","props","dispatch","navigation","email","setEmail","password","setPassword","handleOnPress","exist","auth","token","user","userName","navigate","Alert","alert","handleEmail","t","handlePassword","handleLogUp","styles","container","title","form","input","label","textInput","link","StyleSheet","create","height","Dimensions","get","width","justifyContent","alignItems","position","fontFamily","fontWeight","fontSize","textAlign","marginTop","marginBottom","borderColor","borderWidth","borderRadius","padding","color","textDecorationLine"],"mappings":";;AAAA,SAASA,KAAT,EAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;AASA,SAASC,UAAT,EAAqBC,SAArB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,QAAP;AACA,SAASC,UAAT;;;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACnC,MAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,MAAMM,UAAU,GAAGF,KAAK,CAACE,UAAzB;;AACA,kBAA0BT,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOU,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAgCX,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOY,QAAP;AAAA,MAAiBC,WAAjB;;AAEA,WAAeC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACsBb,UAAU,CAACS,KAAD,CADhC;;AAAA;AACQK,YAAAA,KADR;;AAAA,iBAEMA,KAFN;AAAA;AAAA;AAAA;;AAAA;AAAA,6CAGuBb,SAAS,CAAC;AAAEQ,cAAAA,KAAK,EAALA,KAAF;AAASE,cAAAA,QAAQ,EAARA;AAAT,aAAD,CAHhC;;AAAA;AAGUI,YAAAA,IAHV;;AAII,gBAAIA,IAAI,CAACC,KAAT,EAAgB;AACdT,cAAAA,QAAQ,CAACH,UAAU,CAACW,IAAI,CAACE,IAAL,CAAUC,QAAX,EAAqBH,IAAI,CAACC,KAA1B,EAAiCD,IAAI,CAACE,IAAL,CAAUR,KAA3C,CAAX,CAAR;AACAD,cAAAA,UAAU,CAACW,QAAX,CAAoB,MAApB;AACAC,cAAAA,KAAK,CAACC,KAAN,CAAY,sCAAZ;AACD,aAJD,MAIO;AACLT,cAAAA,WAAW,CAAC,EAAD,CAAX;AACAQ,cAAAA,KAAK,CAACC,KAAN,CAAY,+BAAZ;AACD;;AAXL;AAAA;;AAAA;AAaID,YAAAA,KAAK,CAACC,KAAN,CAAY,oCAAZ;;AAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAiBA,WAASC,WAAT,CAAqBC,CAArB,EAAwB;AACtBb,IAAAA,QAAQ,CAACa,CAAD,CAAR;AACD;;AACD,WAASC,cAAT,CAAwBD,CAAxB,EAA2B;AACzBX,IAAAA,WAAW,CAACW,CAAD,CAAX;AACD;;AACD,WAASE,WAAT,GAAuB;AACrBjB,IAAAA,UAAU,CAACW,QAAX,CAAoB,QAApB;AACD;;AAED,SACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEO,MAAM,CAACC,SAApB;AAAA,eACE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAED,MAAM,CAACE,KAApB;AAAA;AAAA,MADF,EAEE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEF,MAAM,CAACG,IAApB;AAAA,iBACE,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEH,MAAM,CAACI,KAApB;AAAA,mBACE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEJ,MAAM,CAACK,KAApB;AAAA;AAAA,UADF,EAEE,KAAC,SAAD;AACE,UAAA,KAAK,EAAEL,MAAM,CAACM,SADhB;AAEE,UAAA,WAAW,EAAC,uBAFd;AAGE,UAAA,KAAK,EAAEvB,KAHT;AAIE,UAAA,YAAY,EAAEa;AAJhB,UAFF;AAAA,QADF,EAUE,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEI,MAAM,CAACI,KAApB;AAAA,mBACE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEJ,MAAM,CAACK,KAApB;AAAA;AAAA,UADF,EAEE,KAAC,SAAD;AACE,UAAA,KAAK,EAAEL,MAAM,CAACM,SADhB;AAEE,UAAA,WAAW,EAAC,+BAFd;AAGE,UAAA,KAAK,EAAErB,QAHT;AAIE,UAAA,eAAe,EAAE,IAJnB;AAKE,UAAA,YAAY,EAAEa;AALhB,UAFF;AAAA,QAVF,EAoBE,KAAC,QAAD;AAAU,QAAA,OAAO,EAAEX,aAAnB;AAAkC,QAAA,KAAK,EAAC;AAAxC,QApBF;AAAA,MAFF,EAwBE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEa,MAAM,CAACO,IAApB;AAA0B,MAAA,OAAO,EAAER,WAAnC;AAAA;AAAA,MAxBF;AAAA,IADF;AA8BD;AAED,IAAMC,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC/BR,EAAAA,SAAS,EAAE;AACTS,IAAAA,MAAM,EAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBF,MADxB;AAETG,IAAAA,KAAK,EAAEF,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAFvB;AAGTC,IAAAA,cAAc,EAAE,QAHP;AAITC,IAAAA,UAAU,EAAE,QAJH;AAKTC,IAAAA,QAAQ,EAAE;AALD,GADoB;AAQ/Bd,EAAAA,KAAK,EAAE;AACLe,IAAAA,UAAU,EAAE,cADP;AAELC,IAAAA,UAAU,EAAE,KAFP;AAGLC,IAAAA,QAAQ,EAAE,EAHL;AAILC,IAAAA,SAAS,EAAE;AAJN,GARwB;AAc/BjB,EAAAA,IAAI,EAAE;AACJkB,IAAAA,SAAS,EAAE,EADP;AAEJC,IAAAA,YAAY,EAAE,EAFV;AAGJT,IAAAA,KAAK,EAAE,GAHH;AAIJO,IAAAA,SAAS,EAAE,MAJP;AAKJL,IAAAA,UAAU,EAAE,YALR;AAMJD,IAAAA,cAAc,EAAE;AANZ,GAdyB;AAsB/BV,EAAAA,KAAK,EAAE;AACLS,IAAAA,KAAK,EAAE,MADF;AAELS,IAAAA,YAAY,EAAE;AAFT,GAtBwB;AA0B/BjB,EAAAA,KAAK,EAAE;AACLY,IAAAA,UAAU,EAAE,cADP;AAELC,IAAAA,UAAU,EAAE,KAFP;AAGLC,IAAAA,QAAQ,EAAE;AAHL,GA1BwB;AA+B/Bb,EAAAA,SAAS,EAAE;AACTiB,IAAAA,WAAW,EAAE,MADJ;AAETC,IAAAA,WAAW,EAAE,CAFJ;AAGTC,IAAAA,YAAY,EAAE,CAHL;AAITZ,IAAAA,KAAK,EAAE,MAJE;AAKTa,IAAAA,OAAO,EAAE;AALA,GA/BoB;AAsC/BnB,EAAAA,IAAI,EAAE;AACJU,IAAAA,UAAU,EAAE,cADR;AAEJC,IAAAA,UAAU,EAAE,KAFR;AAGJC,IAAAA,QAAQ,EAAE,EAHN;AAIJQ,IAAAA,KAAK,EAAE,SAJH;AAKJP,IAAAA,SAAS,EAAE,QALP;AAMJQ,IAAAA,kBAAkB,EAAE;AANhB;AAtCyB,CAAlB,CAAf","sourcesContent":["import { React, useState } from \"react\";\nimport {\n  Alert,\n  StyleSheet,\n  Text,\n  TextInput,\n  View,\n  Dimensions,\n} from \"react-native\";\nimport { checkEmail, authToken } from \"../lib/api\";\nimport { useDispatch } from \"react-redux\";\nimport MyButton from \"../ui/Button\";\nimport { authAction } from \"../store/actions/auth.action\";\n\nexport default function LogIn(props) {\n  const dispatch = useDispatch();\n  const navigation = props.navigation;\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  async function handleOnPress() {\n    const exist = await checkEmail(email);\n    if (exist) {\n      const auth = await authToken({ email, password });\n      if (auth.token) {\n        dispatch(authAction(auth.user.userName, auth.token, auth.user.email));\n        navigation.navigate(\"Home\");\n        Alert.alert(\"Inicio de sesion realizado con exito\");\n      } else {\n        setPassword(\"\");\n        Alert.alert(\"Contrase√±a o email incorrecto\");\n      }\n    } else {\n      Alert.alert(\"No existe un usuario con ese email\");\n    }\n  }\n\n  function handleEmail(t) {\n    setEmail(t);\n  }\n  function handlePassword(t) {\n    setPassword(t);\n  }\n  function handleLogUp() {\n    navigation.navigate(\"Log Up\");\n  }\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Ingresar</Text>\n      <View style={styles.form}>\n        <View style={styles.input}>\n          <Text style={styles.label}>Email</Text>\n          <TextInput\n            style={styles.textInput}\n            placeholder=\"  Introduzca su email\"\n            value={email}\n            onChangeText={handleEmail}\n          ></TextInput>\n        </View>\n        <View style={styles.input}>\n          <Text style={styles.label}>Contrase√±a</Text>\n          <TextInput\n            style={styles.textInput}\n            placeholder=\"  Introduzca su contrase√±a\"\n            value={password}\n            secureTextEntry={true}\n            onChangeText={handlePassword}\n          ></TextInput>\n        </View>\n        <MyButton onPress={handleOnPress} title=\"Ingresar\"></MyButton>\n      </View>\n      <Text style={styles.link} onPress={handleLogUp}>\n        Registrarse\n      </Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    height: Dimensions.get(\"window\").height,\n    width: Dimensions.get(\"window\").width,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    position: \"absolute\",\n  },\n  title: {\n    fontFamily: \"InterRegular\",\n    fontWeight: \"700\",\n    fontSize: 27,\n    textAlign: \"center\",\n  },\n  form: {\n    marginTop: 20,\n    marginBottom: 15,\n    width: 300,\n    textAlign: \"left\",\n    alignItems: \"flex-start\",\n    justifyContent: \"center\",\n  },\n  input: {\n    width: \"100%\",\n    marginBottom: 15,\n  },\n  label: {\n    fontFamily: \"InterRegular\",\n    fontWeight: \"400\",\n    fontSize: 16,\n  },\n  textInput: {\n    borderColor: \"gray\",\n    borderWidth: 1,\n    borderRadius: 7,\n    width: \"100%\",\n    padding: 2,\n  },\n  link: {\n    fontFamily: \"InterRegular\",\n    fontWeight: \"400\",\n    fontSize: 16,\n    color: \"#485fc7\",\n    textAlign: \"center\",\n    textDecorationLine: \"underline\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}