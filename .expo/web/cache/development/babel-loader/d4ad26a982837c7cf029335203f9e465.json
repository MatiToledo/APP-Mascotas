{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar API_BASE_URL = \"https://desafio-m7.herokuapp.com\";\nexport function auth(data, callback) {\n  var call, res;\n  return _regeneratorRuntime.async(function auth$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch(API_BASE_URL + \"/auth\", {\n            method: \"post\",\n            headers: {\n              \"content-type\": \"application/json\"\n            },\n            body: JSON.stringify(data)\n          }));\n\n        case 2:\n          call = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(call.json());\n\n        case 5:\n          res = _context.sent;\n          return _context.abrupt(\"return\", res);\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function checkEmail(email) {\n  var call, res;\n  return _regeneratorRuntime.async(function checkEmail$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(fetch(API_BASE_URL + \"/users/\" + email));\n\n        case 2:\n          call = _context2.sent;\n          _context2.next = 5;\n          return _regeneratorRuntime.awrap(call.json());\n\n        case 5:\n          res = _context2.sent;\n          return _context2.abrupt(\"return\", res);\n\n        case 7:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function authToken(data) {\n  var call, res;\n  return _regeneratorRuntime.async(function authToken$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return _regeneratorRuntime.awrap(fetch(API_BASE_URL + \"/auth/token\", {\n            method: \"post\",\n            headers: {\n              \"content-type\": \"application/json\"\n            },\n            body: JSON.stringify(data)\n          }));\n\n        case 2:\n          call = _context3.sent;\n          res = call.json();\n          return _context3.abrupt(\"return\", res);\n\n        case 5:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function modifyData(data, token) {\n  var call, res;\n  return _regeneratorRuntime.async(function modifyData$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return _regeneratorRuntime.awrap(fetch(API_BASE_URL + \"/users/modify\", {\n            method: \"PATCH\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: \"bearer \" + token,\n              \"Access-Control-Request-Method\": \"PATCH\"\n            },\n            body: JSON.stringify(data)\n          }));\n\n        case 2:\n          call = _context4.sent;\n          _context4.next = 5;\n          return _regeneratorRuntime.awrap(call.json());\n\n        case 5:\n          res = _context4.sent;\n          return _context4.abrupt(\"return\", res);\n\n        case 8:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function createPetReport(data, token) {\n  return _regeneratorRuntime.async(function createPetReport$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function myPets(token) {\n  var call, res;\n  return _regeneratorRuntime.async(function myPets$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return _regeneratorRuntime.awrap(fetch(API_BASE_URL + \"/pets/me\", {\n            headers: {\n              \"content-type\": \"application/json\",\n              authorization: \"bearer \" + token\n            }\n          }));\n\n        case 2:\n          call = _context6.sent;\n          _context6.next = 5;\n          return _regeneratorRuntime.awrap(call.json());\n\n        case 5:\n          res = _context6.sent;\n          return _context6.abrupt(\"return\", res);\n\n        case 7:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function deletePetReport(data, token) {\n  var call, res;\n  return _regeneratorRuntime.async(function deletePetReport$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return _regeneratorRuntime.awrap(fetch(API_BASE_URL + \"/pets/delete/\", {\n            method: \"delete\",\n            headers: {\n              \"content-type\": \"application/json\",\n              authorization: \"bearer \" + token\n            },\n            body: JSON.stringify(data)\n          }));\n\n        case 2:\n          call = _context7.sent;\n          _context7.next = 5;\n          return _regeneratorRuntime.awrap(call.json());\n\n        case 5:\n          res = _context7.sent;\n          return _context7.abrupt(\"return\", res);\n\n        case 8:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function toEditPetReport(id, token) {\n  var call, res;\n  return _regeneratorRuntime.async(function toEditPetReport$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return _regeneratorRuntime.awrap(fetch(API_BASE_URL + \"/pets/toEdit/\" + id, {\n            headers: {\n              \"content-type\": \"application/json\",\n              authorization: \"bearer \" + token\n            }\n          }));\n\n        case 2:\n          call = _context8.sent;\n          _context8.next = 5;\n          return _regeneratorRuntime.awrap(call.json());\n\n        case 5:\n          res = _context8.sent;\n          return _context8.abrupt(\"return\", res);\n\n        case 7:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function editPetReport(data, token) {\n  var call, res;\n  return _regeneratorRuntime.async(function editPetReport$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return _regeneratorRuntime.awrap(fetch(API_BASE_URL + \"/pets/edit\", {\n            method: \"PATCH\",\n            headers: {\n              \"Access-Control-Request-Method\": \"PATCH\",\n              \"content-type\": \"application/json\",\n              authorization: \"bearer \" + token\n            },\n            body: JSON.stringify(data)\n          }));\n\n        case 2:\n          call = _context9.sent;\n          _context9.next = 5;\n          return _regeneratorRuntime.awrap(call.json());\n\n        case 5:\n          res = _context9.sent;\n\n          if (res == true) {\n            window.alert(\"Exito al modificar el reporte de la mascota\");\n          }\n\n        case 7:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function petsAround(lat, lng) {\n  var call, res;\n  return _regeneratorRuntime.async(function petsAround$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return _regeneratorRuntime.awrap(fetch(API_BASE_URL + \"/pets/around?lat=\" + lat + \"&lng=\" + lng));\n\n        case 2:\n          call = _context10.sent;\n          _context10.next = 5;\n          return _regeneratorRuntime.awrap(call.json());\n\n        case 5:\n          res = _context10.sent;\n          return _context10.abrupt(\"return\", res);\n\n        case 7:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function mapSearch(search) {\n  var call, res;\n  return _regeneratorRuntime.async(function mapSearch$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.next = 2;\n          return _regeneratorRuntime.awrap(fetch(\"https://maps.googleapis.com/maps/api/geocode/json?address=\" + search + \"&key=AIzaSyCFvt1spTbsQZf0rUbkPyl12AoouLK7iDo\"));\n\n        case 2:\n          call = _context11.sent;\n          _context11.next = 5;\n          return _regeneratorRuntime.awrap(call.json());\n\n        case 5:\n          res = _context11.sent;\n          return _context11.abrupt(\"return\", res);\n\n        case 7:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function infoAboutPet(data) {\n  var call, res;\n  return _regeneratorRuntime.async(function infoAboutPet$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.next = 2;\n          return _regeneratorRuntime.awrap(fetch(API_BASE_URL + \"/pets/info\", {\n            method: \"post\",\n            headers: {\n              \"content-type\": \"application/json\"\n            },\n            body: JSON.stringify(data)\n          }));\n\n        case 2:\n          call = _context12.sent;\n          _context12.next = 5;\n          return _regeneratorRuntime.awrap(call.json());\n\n        case 5:\n          res = _context12.sent;\n          return _context12.abrupt(\"return\", res);\n\n        case 7:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function sendNotification(data) {\n  var call, res;\n  return _regeneratorRuntime.async(function sendNotification$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.next = 2;\n          return _regeneratorRuntime.awrap(fetch(API_BASE_URL + \"/notifications\", {\n            method: \"post\",\n            headers: {\n              \"content-type\": \"application/json\"\n            },\n            body: JSON.stringify(data)\n          }));\n\n        case 2:\n          call = _context13.sent;\n          _context13.next = 5;\n          return _regeneratorRuntime.awrap(call.json());\n\n        case 5:\n          res = _context13.sent;\n          return _context13.abrupt(\"return\", res);\n\n        case 7:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["/Users/mati/CoderHouse/APP/1-intro/5-proyect/lib/api.ts"],"names":["API_BASE_URL","auth","data","callback","fetch","method","headers","body","JSON","stringify","call","json","res","checkEmail","email","authToken","modifyData","token","Authorization","createPetReport","myPets","authorization","deletePetReport","toEditPetReport","id","editPetReport","window","alert","petsAround","lat","lng","mapSearch","search","infoAboutPet","sendNotification"],"mappings":"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","sourcesContent":["let API_BASE_URL = \"https://desafio-m7.herokuapp.com\";\n\nexport async function auth(data, callback?) {\n  const call = await fetch(API_BASE_URL + \"/auth\", {\n    method: \"post\",\n\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  });\n\n  const res = await call.json();\n  return res;\n}\n\nexport async function checkEmail(email) {\n  const call = await fetch(API_BASE_URL + \"/users/\" + email);\n  const res = await call.json();\n\n  return res;\n}\n\nexport async function authToken(data) {\n  const call = await fetch(API_BASE_URL + \"/auth/token\", {\n    method: \"post\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  });\n  const res = call.json();\n  return res;\n}\n\nexport async function modifyData(data, token) {\n  const call = await fetch(API_BASE_URL + \"/users/modify\", {\n    method: \"PATCH\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: \"bearer \" + token,\n      \"Access-Control-Request-Method\": \"PATCH\",\n      // \"Access-Control-Allow-Origin\": \"*\",\n      // \"Access-Control-Allow-Headers\": \"*\",\n    },\n    body: JSON.stringify(data),\n  });\n  const res = await call.json();\n  return res;\n  if (res !== false) {\n    window.alert(\"Información modificada con exito\");\n  } else {\n    window.alert(\"Error al modificar la información\");\n  }\n}\n\nexport async function createPetReport(data, token) {\n  // try {\n  //   const call = await fetch(API_BASE_URL + \"/pets/report\", {\n  //     method: \"POST\",\n  //     headers: {\n  //       \"content-type\": \"application/json\",\n  //       authorization: \"bearer \" + token,\n  //       Accept: \"application/json\",\n  //       \"Access-Control-Request-Method\": \"POST\",\n  //     },\n  //     body: JSON.stringify(data),\n  //   });\n  //   const res = await call.text();\n  //   return res;\n  // } catch (error) {\n  //   console.error(error);\n  // }\n  // if (res == true) {\n  //   window.alert(\"Mascota reportada con exito\");\n  // } else {\n  //   window.alert(\"Error al reportar la mascota\");\n  // }\n}\n\nexport async function myPets(token) {\n  const call = await fetch(API_BASE_URL + \"/pets/me\", {\n    headers: {\n      \"content-type\": \"application/json\",\n      authorization: \"bearer \" + token,\n    },\n  });\n\n  const res = await call.json();\n  return res;\n}\n\nexport async function deletePetReport(data, token) {\n  const call = await fetch(API_BASE_URL + \"/pets/delete/\", {\n    method: \"delete\",\n    headers: {\n      \"content-type\": \"application/json\",\n      authorization: \"bearer \" + token,\n    },\n    body: JSON.stringify(data),\n  });\n\n  const res = await call.json();\n  return res;\n\n  if (res == true) {\n    window.alert(\"Exito al eliminar el reporte de la mascota\");\n  }\n}\n\nexport async function toEditPetReport(id, token) {\n  const call = await fetch(API_BASE_URL + \"/pets/toEdit/\" + id, {\n    headers: {\n      \"content-type\": \"application/json\",\n      authorization: \"bearer \" + token,\n    },\n  });\n\n  const res = await call.json();\n  return res;\n}\n\nexport async function editPetReport(data, token) {\n  const call = await fetch(API_BASE_URL + \"/pets/edit\", {\n    method: \"PATCH\",\n    headers: {\n      \"Access-Control-Request-Method\": \"PATCH\",\n      \"content-type\": \"application/json\",\n      authorization: \"bearer \" + token,\n    },\n    body: JSON.stringify(data),\n  });\n  const res = await call.json();\n\n  if (res == true) {\n    window.alert(\"Exito al modificar el reporte de la mascota\");\n  }\n}\n\nexport async function petsAround(lat, lng) {\n  const call = await fetch(\n    API_BASE_URL + \"/pets/around?lat=\" + lat + \"&lng=\" + lng\n  );\n  const res = await call.json();\n  return res;\n}\nexport async function mapSearch(search) {\n  const call = await fetch(\n    `https://maps.googleapis.com/maps/api/geocode/json?address=${search}&key=AIzaSyCFvt1spTbsQZf0rUbkPyl12AoouLK7iDo`\n  );\n  const res = await call.json();\n  return res;\n}\n\nexport async function infoAboutPet(data) {\n  const call = await fetch(API_BASE_URL + \"/pets/info\", {\n    method: \"post\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  });\n\n  const res = await call.json();\n  return res;\n}\n\nexport async function sendNotification(data) {\n  const call = await fetch(API_BASE_URL + \"/notifications\", {\n    method: \"post\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  });\n  const res = await call.json();\n  return res;\n}\n"]},"metadata":{},"sourceType":"module"}