{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from \"react\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport colors from \"../constants/colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function MyButton(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  function handlePress() {\n    setLoading(!loading);\n  }\n\n  if (props.variant == \"secondary\") {\n    return _jsx(Pressable, {\n      onPress: props.onPress,\n      style: styles.buttonsecondary,\n      children: _jsx(Text, {\n        style: styles.textsecondary,\n        children: props.title\n      })\n    });\n  } else if (props.variant == \"loader\") {\n    return _jsx(Pressable, {\n      onPress: props.onPress,\n      onPressIn: handlePress,\n      style: styles.button,\n      children: loading ? _jsx(ActivityIndicator, {\n        color: \"#fafafa\",\n        animating: loading\n      }) : _jsx(Text, {\n        style: styles.text,\n        children: props.title\n      })\n    });\n  } else {\n    return _jsx(Pressable, {\n      onPress: props.onPress,\n      style: styles.button,\n      children: _jsx(Text, {\n        style: styles.text,\n        children: props.title\n      })\n    });\n  }\n}\nvar styles = StyleSheet.create({\n  button: {\n    width: 300,\n    backgroundColor: colors.primary,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: 35,\n    borderRadius: 5\n  },\n  buttonsecondary: {\n    width: 300,\n    backgroundColor: colors.secondary,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: 35,\n    borderRadius: 5\n  },\n  text: {\n    color: \"white\",\n    fontFamily: \"InterRegular\",\n    fontWeight: \"400\",\n    fontSize: 16\n  },\n  textsecondary: {\n    color: \"black\",\n    fontFamily: \"InterRegular\",\n    fontWeight: \"400\",\n    fontSize: 16\n  }\n});","map":{"version":3,"sources":["/Users/mati/CoderHouse/APP/1-intro/5-proyect/ui/Button.js"],"names":["useState","colors","MyButton","props","loading","setLoading","handlePress","variant","onPress","styles","buttonsecondary","textsecondary","title","button","text","StyleSheet","create","width","backgroundColor","primary","alignItems","justifyContent","height","borderRadius","secondary","color","fontFamily","fontWeight","fontSize"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;;;;;AAGA,OAAOC,MAAP;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACtC,kBAA8BH,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAOI,OAAP;AAAA,MAAgBC,UAAhB;;AAEA,WAASC,WAAT,GAAuB;AACrBD,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACD;;AAED,MAAID,KAAK,CAACI,OAAN,IAAiB,WAArB,EAAkC;AAChC,WACE,KAAC,SAAD;AAAW,MAAA,OAAO,EAAEJ,KAAK,CAACK,OAA1B;AAAmC,MAAA,KAAK,EAAEC,MAAM,CAACC,eAAjD;AAAA,gBACE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE,aAApB;AAAA,kBAAoCR,KAAK,CAACS;AAA1C;AADF,MADF;AAKD,GAND,MAMO,IAAIT,KAAK,CAACI,OAAN,IAAiB,QAArB,EAA+B;AACpC,WACE,KAAC,SAAD;AACE,MAAA,OAAO,EAAEJ,KAAK,CAACK,OADjB;AAEE,MAAA,SAAS,EAAEF,WAFb;AAGE,MAAA,KAAK,EAAEG,MAAM,CAACI,MAHhB;AAAA,gBAKGT,OAAO,GACN,KAAC,iBAAD;AACE,QAAA,KAAK,EAAE,SADT;AAEE,QAAA,SAAS,EAAEA;AAFb,QADM,GAMN,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEK,MAAM,CAACK,IAApB;AAAA,kBAA2BX,KAAK,CAACS;AAAjC;AAXJ,MADF;AAgBD,GAjBM,MAiBA;AACL,WACE,KAAC,SAAD;AAAW,MAAA,OAAO,EAAET,KAAK,CAACK,OAA1B;AAAmC,MAAA,KAAK,EAAEC,MAAM,CAACI,MAAjD;AAAA,gBACE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEJ,MAAM,CAACK,IAApB;AAAA,kBAA2BX,KAAK,CAACS;AAAjC;AADF,MADF;AAKD;AACF;AAED,IAAMH,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BH,EAAAA,MAAM,EAAE;AACNI,IAAAA,KAAK,EAAE,GADD;AAENC,IAAAA,eAAe,EAAEjB,MAAM,CAACkB,OAFlB;AAGNC,IAAAA,UAAU,EAAE,QAHN;AAINC,IAAAA,cAAc,EAAE,QAJV;AAKNC,IAAAA,MAAM,EAAE,EALF;AAMNC,IAAAA,YAAY,EAAE;AANR,GADuB;AAS/Bb,EAAAA,eAAe,EAAE;AACfO,IAAAA,KAAK,EAAE,GADQ;AAEfC,IAAAA,eAAe,EAAEjB,MAAM,CAACuB,SAFT;AAGfJ,IAAAA,UAAU,EAAE,QAHG;AAIfC,IAAAA,cAAc,EAAE,QAJD;AAKfC,IAAAA,MAAM,EAAE,EALO;AAMfC,IAAAA,YAAY,EAAE;AANC,GATc;AAiB/BT,EAAAA,IAAI,EAAE;AACJW,IAAAA,KAAK,EAAE,OADH;AAEJC,IAAAA,UAAU,EAAE,cAFR;AAGJC,IAAAA,UAAU,EAAE,KAHR;AAIJC,IAAAA,QAAQ,EAAE;AAJN,GAjByB;AAwB/BjB,EAAAA,aAAa,EAAE;AACbc,IAAAA,KAAK,EAAE,OADM;AAEbC,IAAAA,UAAU,EAAE,cAFC;AAGbC,IAAAA,UAAU,EAAE,KAHC;AAIbC,IAAAA,QAAQ,EAAE;AAJG;AAxBgB,CAAlB,CAAf","sourcesContent":["import { useState } from \"react\";\nimport { Pressable, StyleSheet, Text, ActivityIndicator } from \"react-native\";\n\nimport colors from \"../constants/colors\";\n\nexport default function MyButton(props) {\n  const [loading, setLoading] = useState(false);\n\n  function handlePress() {\n    setLoading(!loading);\n  }\n\n  if (props.variant == \"secondary\") {\n    return (\n      <Pressable onPress={props.onPress} style={styles.buttonsecondary}>\n        <Text style={styles.textsecondary}>{props.title}</Text>\n      </Pressable>\n    );\n  } else if (props.variant == \"loader\") {\n    return (\n      <Pressable\n        onPress={props.onPress}\n        onPressIn={handlePress}\n        style={styles.button}\n      >\n        {loading ? (\n          <ActivityIndicator\n            color={\"#fafafa\"}\n            animating={loading}\n          ></ActivityIndicator>\n        ) : (\n          <Text style={styles.text}>{props.title}</Text>\n        )}\n      </Pressable>\n    );\n  } else {\n    return (\n      <Pressable onPress={props.onPress} style={styles.button}>\n        <Text style={styles.text}>{props.title}</Text>\n      </Pressable>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    width: 300,\n    backgroundColor: colors.primary,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: 35,\n    borderRadius: 5,\n  },\n  buttonsecondary: {\n    width: 300,\n    backgroundColor: colors.secondary,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: 35,\n    borderRadius: 5,\n  },\n  text: {\n    color: \"white\",\n    fontFamily: \"InterRegular\",\n    fontWeight: \"400\",\n    fontSize: 16,\n    // marginTop: 15,\n  },\n  textsecondary: {\n    color: \"black\",\n    fontFamily: \"InterRegular\",\n    fontWeight: \"400\",\n    fontSize: 16,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}