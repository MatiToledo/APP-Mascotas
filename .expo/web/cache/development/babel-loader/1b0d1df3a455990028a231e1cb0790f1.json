{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport MyButton from \"../ui/Button\";\nimport colors from \"../constants/colors\";\nimport React, { useEffect } from \"react\";\nimport * as Location from \"expo-location\";\nimport { useDispatch } from \"react-redux\";\nimport { addUbication } from \"../store/actions/user.action\";\nimport { petsAround } from \"../lib/api\";\nimport { loadAuth } from \"../store/actions/auth.action\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Home(props) {\n  var dispatch = useDispatch();\n  useEffect(function () {\n    dispatch(loadAuth());\n  }, []);\n\n  function verifyPermissions() {\n    var _await$Location$reque, status;\n\n    return _regeneratorRuntime.async(function verifyPermissions$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Location.requestForegroundPermissionsAsync());\n\n          case 2:\n            _await$Location$reque = _context.sent;\n            status = _await$Location$reque.status;\n\n            if (!(status !== \"granted\")) {\n              _context.next = 7;\n              break;\n            }\n\n            Alert.alert(\"Permisos insuficientes\", \"Necesita dar permisos de localizacion para usar la aplicacion\", [{\n              text: \"ok\"\n            }]);\n            return _context.abrupt(\"return\", false);\n\n          case 7:\n            return _context.abrupt(\"return\", true);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function handlerPress() {\n    var isLocationOk, location, petsFound;\n    return _regeneratorRuntime.async(function handlerPress$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(verifyPermissions());\n\n          case 2:\n            isLocationOk = _context2.sent;\n\n            if (isLocationOk) {\n              _context2.next = 5;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 5:\n            _context2.next = 7;\n            return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({\n              timeout: 5000\n            }));\n\n          case 7:\n            location = _context2.sent;\n            dispatch(addUbication({\n              lat: location.coords.latitude,\n              lng: location.coords.longitude\n            }));\n            _context2.next = 11;\n            return _regeneratorRuntime.awrap(petsAround(location.coords.latitude, location.coords.longitude));\n\n          case 11:\n            petsFound = _context2.sent;\n\n            if (petsFound.length == 0) {\n              Alert.alert(\"No hay mascotas perdidas cerca tuyo\");\n            } else {\n              props.getPets(petsFound);\n              props.handleUbication();\n            }\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.body,\n      children: \"Para ver las mascotas reportadas cerca tuyo necesitamos permiso para conocer tu ubicaci\\xF3n.\"\n    }), _jsx(MyButton, {\n      variant: \"loader\",\n      title: \"Dar mi ubicación\",\n      onPress: handlerPress.bind()\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    height: 60,\n    width: 300,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flex: 1\n  },\n  body: {\n    fontFamily: \"InterRegular\",\n    fontWeight: \"400\",\n    fontSize: 16,\n    textAlign: \"center\",\n    marginBottom: 10\n  },\n  button: {\n    width: 300,\n    marginTop: 10,\n    backgroundColor: colors.primary,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: 30,\n    borderRadius: 5\n  }\n});","map":{"version":3,"sources":["/Users/mati/CoderHouse/APP/1-intro/5-proyect/components/Home.js"],"names":["MyButton","colors","React","useEffect","Location","useDispatch","addUbication","petsAround","loadAuth","Home","props","dispatch","verifyPermissions","requestForegroundPermissionsAsync","status","Alert","alert","text","handlerPress","isLocationOk","getCurrentPositionAsync","timeout","location","lat","coords","latitude","lng","longitude","petsFound","length","getPets","handleUbication","styles","container","body","bind","StyleSheet","create","height","width","alignItems","justifyContent","flex","fontFamily","fontWeight","fontSize","textAlign","marginBottom","button","marginTop","backgroundColor","primary","borderRadius"],"mappings":"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","sourcesContent":["import { StyleSheet, Text, View, Alert } from \"react-native\";\nimport MyButton from \"../ui/Button\";\nimport colors from \"../constants/colors\";\nimport React, { useEffect } from \"react\";\nimport * as Location from \"expo-location\";\nimport { useDispatch } from \"react-redux\";\nimport { addUbication } from \"../store/actions/user.action\";\nimport { petsAround } from \"../lib/api\";\nimport { loadAuth } from \"../store/actions/auth.action\";\n\nexport default function Home(props) {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(loadAuth());\n  }, []);\n\n  async function verifyPermissions() {\n    let { status } = await Location.requestForegroundPermissionsAsync();\n    if (status !== \"granted\") {\n      Alert.alert(\n        \"Permisos insuficientes\",\n        \"Necesita dar permisos de localizacion para usar la aplicacion\",\n        [{ text: \"ok\" }]\n      );\n      return false;\n    }\n    return true;\n  }\n\n  async function handlerPress() {\n    const isLocationOk = await verifyPermissions();\n    if (!isLocationOk) return;\n\n    let location = await Location.getCurrentPositionAsync({ timeout: 5000 });\n\n    dispatch(\n      addUbication({\n        lat: location.coords.latitude,\n        lng: location.coords.longitude,\n      })\n    );\n\n    const petsFound = await petsAround(\n      location.coords.latitude,\n      location.coords.longitude\n    );\n    if (petsFound.length == 0) {\n      Alert.alert(\"No hay mascotas perdidas cerca tuyo\");\n    } else {\n      props.getPets(petsFound);\n      props.handleUbication();\n    }\n  }\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.body}>\n        Para ver las mascotas reportadas cerca tuyo necesitamos permiso para\n        conocer tu ubicación.\n      </Text>\n      <MyButton\n        variant=\"loader\"\n        title={\"Dar mi ubicación\"}\n        onPress={handlerPress.bind()}\n      ></MyButton>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 60,\n    width: 300,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flex: 1,\n  },\n  body: {\n    fontFamily: \"InterRegular\",\n    fontWeight: \"400\",\n    fontSize: 16,\n    textAlign: \"center\",\n    marginBottom: 10,\n  },\n  button: {\n    width: 300,\n    marginTop: 10,\n    backgroundColor: colors.primary,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: 30,\n    borderRadius: 5,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}