{"ast":null,"code":"import { React } from \"react\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport LogInScreen from \"../../screens/LogIn\";\nimport LogUpScreen from \"../../screens/LogUp\";\nimport { useSelector } from \"react-redux\";\nimport MyDataScreen from \"../../screens/MyData\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\n\nfunction LogInNavigator() {\n  var token = useSelector(function (state) {\n    return state.auth.token;\n  });\n\n  var auth = _jsx(Stack.Navigator, {\n    initialRouteName: \"Log\",\n    screenOptions: {\n      headerShown: false\n    },\n    children: _jsx(Stack.Screen, {\n      name: \"My Data\",\n      component: MyDataScreen\n    })\n  });\n\n  var noAuth = _jsxs(Stack.Navigator, {\n    initialRouteName: \"Log\",\n    screenOptions: {\n      headerShown: false\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"Log In\",\n      component: LogInScreen\n    }), _jsx(Stack.Screen, {\n      name: \"Log Up\",\n      component: LogUpScreen\n    })]\n  });\n\n  if (token) {\n    return auth;\n  } else {\n    return noAuth;\n  }\n}\n\nexport default LogInNavigator;","map":{"version":3,"sources":["/Users/mati/CoderHouse/APP/1-intro/5-proyect/navigation/LogInStack/index.js"],"names":["React","createNativeStackNavigator","LogInScreen","LogUpScreen","useSelector","MyDataScreen","Stack","LogInNavigator","token","state","auth","headerShown","noAuth"],"mappings":"AAAA,SAASA,KAAT,QAAsB,OAAtB;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,OAAOC,WAAP;AACA,OAAOC,WAAP;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,YAAP;;;AAEA,IAAMC,KAAK,GAAGL,0BAA0B,EAAxC;;AAEA,SAASM,cAAT,GAA0B;AACxB,MAAMC,KAAK,GAAGJ,WAAW,CAAC,UAACK,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAN,CAAWF,KAAtB;AAAA,GAAD,CAAzB;;AAEA,MAAME,IAAI,GACR,KAAC,KAAD,CAAO,SAAP;AACE,IAAA,gBAAgB,EAAC,KADnB;AAEE,IAAA,aAAa,EAAE;AACbC,MAAAA,WAAW,EAAE;AADA,KAFjB;AAAA,cAME,KAAC,KAAD,CAAO,MAAP;AAAc,MAAA,IAAI,EAAC,SAAnB;AAA6B,MAAA,SAAS,EAAEN;AAAxC;AANF,IADF;;AAWA,MAAMO,MAAM,GACV,MAAC,KAAD,CAAO,SAAP;AACE,IAAA,gBAAgB,EAAC,KADnB;AAEE,IAAA,aAAa,EAAE;AACbD,MAAAA,WAAW,EAAE;AADA,KAFjB;AAAA,eAME,KAAC,KAAD,CAAO,MAAP;AAAc,MAAA,IAAI,EAAC,QAAnB;AAA4B,MAAA,SAAS,EAAET;AAAvC,MANF,EAOE,KAAC,KAAD,CAAO,MAAP;AAAc,MAAA,IAAI,EAAC,QAAnB;AAA4B,MAAA,SAAS,EAAEC;AAAvC,MAPF;AAAA,IADF;;AAYA,MAAIK,KAAJ,EAAW;AACT,WAAOE,IAAP;AACD,GAFD,MAEO;AACL,WAAOE,MAAP;AACD;AACF;;AAED,eAAeL,cAAf","sourcesContent":["import { React } from \"react\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport LogInScreen from \"../../screens/LogIn\";\nimport LogUpScreen from \"../../screens/LogUp\";\nimport { useSelector } from \"react-redux\";\nimport MyDataScreen from \"../../screens/MyData\";\n\nconst Stack = createNativeStackNavigator();\n\nfunction LogInNavigator() {\n  const token = useSelector((state) => state.auth.token);\n\n  const auth = (\n    <Stack.Navigator\n      initialRouteName=\"Log\"\n      screenOptions={{\n        headerShown: false,\n      }}\n    >\n      <Stack.Screen name=\"My Data\" component={MyDataScreen}></Stack.Screen>\n    </Stack.Navigator>\n  );\n\n  const noAuth = (\n    <Stack.Navigator\n      initialRouteName=\"Log\"\n      screenOptions={{\n        headerShown: false,\n      }}\n    >\n      <Stack.Screen name=\"Log In\" component={LogInScreen}></Stack.Screen>\n      <Stack.Screen name=\"Log Up\" component={LogUpScreen}></Stack.Screen>\n    </Stack.Navigator>\n  );\n\n  if (token) {\n    return auth;\n  } else {\n    return noAuth;\n  }\n}\n\nexport default LogInNavigator;\n"]},"metadata":{},"sourceType":"module"}