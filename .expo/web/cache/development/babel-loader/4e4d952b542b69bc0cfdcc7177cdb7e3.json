{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { React, useState } from \"react\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { infoAboutPet, sendNotification } from \"../lib/api\";\nimport MyButton from \"../ui/Button\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function PopUp(props) {\n  var visible = props.visible,\n      closeModal = props.closeModal,\n      pet = props.pet;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      reporterName = _useState2[0],\n      setReporterName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      reporterPhoneNumber = _useState4[0],\n      setReporterPhoneNumber = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      seenIn = _useState6[0],\n      setSeenIn = _useState6[1];\n\n  function handleReporterName(t) {\n    setReporterName(t);\n  }\n\n  function handleReporterPhoneNumber(t) {\n    setReporterPhoneNumber(t);\n  }\n\n  function handleSeenIn(t) {\n    setSeenIn(t);\n  }\n\n  function handleSubmit() {\n    var notification;\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(infoAboutPet({\n              petId: pet.petId,\n              petName: pet.petName,\n              reporterName: reporterName,\n              seenIn: seenIn,\n              reporterPhoneNumber: reporterPhoneNumber\n            }));\n\n          case 2:\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(sendNotification({\n              petOwnerEmail: pet.petOwnerEmail,\n              petName: pet.petName,\n              reporterName: reporterName,\n              seenIn: seenIn,\n              reporterPhoneNumber: reporterPhoneNumber\n            }));\n\n          case 4:\n            notification = _context.sent;\n\n            if (notification == true) {\n              Alert.alert(\"reporte realizado con exito \");\n              closeModal();\n            } else {\n              Alert.alert(\"error al realizar el reporte\");\n            }\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return _jsx(Modal, {\n    transparent: true,\n    animationType: \"fade\",\n    visible: visible,\n    children: _jsx(View, {\n      style: styles.center,\n      children: _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(TouchableHighlight, {\n          underlayColor: \"transparent\",\n          onPress: closeModal,\n          children: _jsx(Image, {\n            style: styles.close,\n            source: require(\"../images/close.png\")\n          })\n        }), _jsxs(Text, {\n          style: styles.title,\n          children: [\"Reportar informaci\\xF3n sobre \", pet.petName]\n        }), _jsxs(View, {\n          style: styles.form,\n          children: [_jsxs(View, {\n            style: styles.input,\n            children: [_jsx(Text, {\n              style: styles.label,\n              children: \"Tu nombre\"\n            }), _jsx(TextInput, {\n              style: styles.textInput,\n              placeholder: \"  Introduzca su nombre\",\n              value: reporterName,\n              onChangeText: handleReporterName\n            })]\n          }), _jsxs(View, {\n            style: styles.input,\n            children: [_jsx(Text, {\n              style: styles.label,\n              children: \"Tu telefono\"\n            }), _jsx(TextInput, {\n              keyboardType: \"numeric\",\n              style: styles.textInput,\n              placeholder: \"  Introduzca su telefono\",\n              value: reporterPhoneNumber,\n              onChangeText: handleReporterPhoneNumber\n            })]\n          }), _jsxs(View, {\n            style: styles.input,\n            children: [_jsx(Text, {\n              style: styles.label,\n              children: \"Donde lo viste\"\n            }), _jsx(TextInput, {\n              multiline: true,\n              numberOfLines: 4,\n              style: styles.textInput,\n              placeholder: \"  Donde lo viste?\",\n              value: seenIn,\n              onChangeText: handleSeenIn\n            })]\n          }), _jsx(MyButton, {\n            title: \"Enviar informaci\\xF3n\",\n            onPress: handleSubmit\n          })]\n        })]\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  center: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  close: {\n    marginTop: 10,\n    marginLeft: 320,\n    width: 15,\n    height: 15\n  },\n  container: {\n    width: 360,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    position: \"absolute\",\n    backgroundColor: \"#fff\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 9\n    },\n    shadowOpacity: 0.5,\n    shadowRadius: 12.27,\n    elevation: 19,\n    borderRadius: 7,\n    borderColor: \"gray\",\n    borderWidth: 1\n  },\n  title: {\n    maxWidth: 300,\n    fontFamily: \"InterRegular\",\n    fontWeight: \"700\",\n    fontSize: 27,\n    textAlign: \"center\"\n  },\n  form: {\n    marginTop: 20,\n    marginBottom: 15,\n    width: 300,\n    textAlign: \"left\",\n    alignItems: \"flex-start\",\n    justifyContent: \"center\"\n  },\n  input: {\n    width: \"100%\",\n    marginBottom: 15\n  },\n  label: {\n    fontFamily: \"InterRegular\",\n    fontWeight: \"400\",\n    fontSize: 16\n  },\n  textInput: {\n    borderColor: \"gray\",\n    borderWidth: 1,\n    borderRadius: 7,\n    width: \"100%\",\n    padding: 2\n  }\n});","map":{"version":3,"sources":["/Users/mati/CoderHouse/APP/1-intro/5-proyect/components/PopUp.js"],"names":["React","useState","useSelector","useDispatch","infoAboutPet","sendNotification","MyButton","PopUp","props","visible","closeModal","pet","reporterName","setReporterName","reporterPhoneNumber","setReporterPhoneNumber","seenIn","setSeenIn","handleReporterName","t","handleReporterPhoneNumber","handleSeenIn","handleSubmit","petId","petName","petOwnerEmail","notification","Alert","alert","styles","center","container","close","require","title","form","input","label","textInput","StyleSheet","create","flex","alignItems","justifyContent","marginTop","marginLeft","width","height","position","backgroundColor","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","borderRadius","borderColor","borderWidth","maxWidth","fontFamily","fontWeight","fontSize","textAlign","marginBottom","padding"],"mappings":"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","sourcesContent":["import { React, useState } from \"react\";\nimport {\n  TouchableHighlight,\n  Image,\n  StyleSheet,\n  Text,\n  View,\n  TextInput,\n  Modal,\n  Pressable,\n  Alert,\n} from \"react-native\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { infoAboutPet, sendNotification } from \"../lib/api\";\n\nimport MyButton from \"../ui/Button\";\n\nexport default function PopUp(props) {\n  const { visible, closeModal, pet } = props;\n  const [reporterName, setReporterName] = useState(\"\");\n  const [reporterPhoneNumber, setReporterPhoneNumber] = useState(\"\");\n  const [seenIn, setSeenIn] = useState(\"\");\n\n  function handleReporterName(t) {\n    setReporterName(t);\n  }\n  function handleReporterPhoneNumber(t) {\n    setReporterPhoneNumber(t);\n  }\n  function handleSeenIn(t) {\n    setSeenIn(t);\n  }\n  async function handleSubmit() {\n    await infoAboutPet({\n      petId: pet.petId,\n      petName: pet.petName,\n      reporterName,\n      seenIn,\n      reporterPhoneNumber,\n    });\n    const notification = await sendNotification({\n      petOwnerEmail: pet.petOwnerEmail,\n      petName: pet.petName,\n      reporterName,\n      seenIn,\n      reporterPhoneNumber,\n    });\n    if (notification == true) {\n      Alert.alert(\"reporte realizado con exito \");\n      closeModal();\n    } else {\n      Alert.alert(\"error al realizar el reporte\");\n    }\n  }\n\n  return (\n    <Modal transparent={true} animationType=\"fade\" visible={visible}>\n      <View style={styles.center}>\n        <View style={styles.container}>\n          <TouchableHighlight\n            underlayColor={\"transparent\"}\n            onPress={closeModal}\n          >\n            <Image\n              style={styles.close}\n              source={require(\"../images/close.png\")}\n            ></Image>\n          </TouchableHighlight>\n          <Text style={styles.title}>\n            Reportar información sobre {pet.petName}\n          </Text>\n          <View style={styles.form}>\n            <View style={styles.input}>\n              <Text style={styles.label}>Tu nombre</Text>\n              <TextInput\n                style={styles.textInput}\n                placeholder=\"  Introduzca su nombre\"\n                value={reporterName}\n                onChangeText={handleReporterName}\n              ></TextInput>\n            </View>\n            <View style={styles.input}>\n              <Text style={styles.label}>Tu telefono</Text>\n              <TextInput\n                keyboardType=\"numeric\"\n                style={styles.textInput}\n                placeholder=\"  Introduzca su telefono\"\n                value={reporterPhoneNumber}\n                onChangeText={handleReporterPhoneNumber}\n              ></TextInput>\n            </View>\n            <View style={styles.input}>\n              <Text style={styles.label}>Donde lo viste</Text>\n              <TextInput\n                multiline={true}\n                numberOfLines={4}\n                style={styles.textInput}\n                placeholder=\"  Donde lo viste?\"\n                value={seenIn}\n                onChangeText={handleSeenIn}\n              ></TextInput>\n            </View>\n            <MyButton\n              title=\"Enviar información\"\n              onPress={handleSubmit}\n            ></MyButton>\n          </View>\n        </View>\n      </View>\n    </Modal>\n  );\n}\n\nconst styles = StyleSheet.create({\n  center: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  close: {\n    marginTop: 10,\n    marginLeft: 320,\n    width: 15,\n    height: 15,\n  },\n  container: {\n    width: 360,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    position: \"absolute\",\n    backgroundColor: \"#fff\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 9,\n    },\n    shadowOpacity: 0.5,\n    shadowRadius: 12.27,\n    elevation: 19,\n    borderRadius: 7,\n    borderColor: \"gray\",\n    borderWidth: 1,\n  },\n  title: {\n    maxWidth: 300,\n    fontFamily: \"InterRegular\",\n    fontWeight: \"700\",\n    fontSize: 27,\n    textAlign: \"center\",\n  },\n  form: {\n    marginTop: 20,\n    marginBottom: 15,\n    width: 300,\n    textAlign: \"left\",\n    alignItems: \"flex-start\",\n    justifyContent: \"center\",\n  },\n  input: {\n    width: \"100%\",\n    marginBottom: 15,\n  },\n  label: {\n    fontFamily: \"InterRegular\",\n    fontWeight: \"400\",\n    fontSize: 16,\n  },\n  textInput: {\n    borderColor: \"gray\",\n    borderWidth: 1,\n    borderRadius: 7,\n    width: \"100%\",\n    padding: 2,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}